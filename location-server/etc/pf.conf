# Documentation:
# https://blog.uxtly.com/freebsd-jails-network-setup

xbridge_net = "10.0.2.0/24"
nginx_j     = "10.0.2.20"
node_j      = "10.0.2.30"
pg_j        = "10.0.2.40"

port_ssh_nginx_j = "2220"
port_ssh_node_j  = "2230"
port_ssh_pg_j    = "2240"

port_nginx = "{ 443 80 }"
port_email = 465 # https://www.fastmail.com/help/technical/servernamesandports.html

resolvers = "{ 1.1.1.1 8.8.8.8 }"
priv_ntp = "{ 192.0.2.10 192.0.2.11 }"

# Not using `persist` because I think that's only needed for using
# anchors, i.e. I tried reloading the rules with and without persist
# <ratelimit> and in both cases the entries were kept in memory.
table <ratelimit>
table <blocklist> file "/etc/ips_blocklist" # https://feeds.dshield.org/block.txt
table <martians>  file "/etc/ips_martians"  # Bogon
table <payments>  file "/etc/ips_stripe"    # Stripe API IPs
table <email>     file "/etc/ips_fastmail"  # 66.111.4/24
table <xpeers>    file "/etc/ips_xnic_peers"
table <ipg_j>     file "/etc/ip_ipg_b"
table <inode_j>   file "/etc/ip_inode_b"
table <pgpeer>    file "/etc/ip_peer_ipg_b"
table <nodepeer>  file "/etc/ip_peer_inode_b"

# Normalize Traffic. Prevents IP Fragmentation Attacks and Inspection Evasion.
scrub in all fragment reassemble no-df

# Translation
nat on xnic from $xbridge_net -> (xnic:0)
rdr on xnic proto tcp from any      to port $port_nginx       -> $nginx_j
rdr on xnic proto tcp from <xpeers> to port $port_ssh_nginx_j -> $nginx_j port 22
rdr on xnic proto tcp from <xpeers> to port $port_ssh_node_j  -> $node_j  port 22
rdr on xnic proto tcp from <xpeers> to port $port_ssh_pg_j    -> $pg_j    port 22

# Blockers
antispoof quick for xnic
block in quick on xnic \
      from { <blocklist> <ratelimit> <martians> no-route urpf-failed }
block all

# Nginx Incoming Traffic
pass in quick on xnic proto tcp from any \
     to port $port_nginx keep state \
     (max-src-conn-rate 100/10, overload <ratelimit> flush global)
pass out quick on xbridge proto tcp to $nginx_j port $port_nginx

# Tunnels
pass in  quick on ipg_a   proto tcp from <ipg_j>    to <pgpeer> port 5434
pass in  quick on inic    proto tcp from <pgpeer>   to <ipg_j>  port 5434
pass in  quick on inode_a proto tcp from <inode_j>  to <pgpeer> port 5433
pass in  quick on inic    proto tcp from <nodepeer> to <ipg_j>  port 5433
pass out quick on ibridge proto tcp from any        to any      port { 5434 5433 }

# Node.js Outgoing Traffic
pass in on xbridge proto udp from $node_j to $resolvers port 53
pass in on xbridge proto tcp from $node_j to <payments> port 443
pass in on xbridge proto tcp from $node_j to <email>    port $port_email
pass out on xnic   proto udp from any     to $resolvers port 53
pass out on xnic   proto tcp from any     to <payments> port 443
pass out on xnic   proto tcp from any     to <email>    port $port_email

# SSH
pass in  on xnic    proto tcp from <xpeers> to any          port 22
pass out on xbridge proto tcp from <xpeers> to $xbridge_net port 22

# NTP
pass out on inic proto udp from any to $priv_ntp port 123

# Uncomment for updating FreeBSD and packages
pass in  on xbridge from $xbridge_net
pass out on xnic

# vim: set ft=pf
